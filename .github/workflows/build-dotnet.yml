# DEPRECATED! Use build-and-test-dotnet instead, that can also execute tests.
name: Build .NET solution

on:
  workflow_call:
    secrets:
      CHECKOUT_TOKEN:
        required: false
        description: >
          The GitHub token to authenticate checkout. Pass in a GitHub personal access token if authenticated submodules
          are used.

    inputs:
      cancel-workflow-on-failure:
        description: When set to "true", it will cancel the current workflow run with all jobs if this workflow fails.
        type: string
        default: 'true'
      # This needs to be stringified JSON because inputs don't support arrays, see
      # https://github.community/t/reusable-workflow-with-strategy-matrix/205676/2.
      machine-types:
        type: string
        default: "['ubuntu-22.04']"
        description: >
          Stringified JSON array with the name of the type of machine(s) to run the workflow under, e.g.
          "['ubuntu-22.04']" or "['ubuntu-22.04', 'windows-2022']".
      dotnet-version:
        type: string
        default: 8.0.x
        description: Version of the .NET SDK to set up.
      build-directory:
        type: string
        default: .
        description: Path to the directory where a solution file can be found.
      build-verbosity:
        type: string
        default: quiet
        description: Verbosity parameter for dotnet build.
      build-enable-code-analysis:
        type: string
        default: 'true'
        description: Indicates whether to enable static code analysis during dotnet build.
      build-enable-nuget-caching:
        type: string
        default: 'false'
        description: >
          If set to "true", the NuGet packages will be cached by GitHub. This is faster if you have a lot of NuGet
          packages, but negligible or even slower if you only have a handful. When run on BuildJet, it will use the
          BuildJet cache instead of GitHub's, which is faster.
      build-enable-npm-caching:
        type: string
        default: 'false'
        description: >
          If set to "true", the NPM packages will be cached by GitHub. This is faster if you have a lot of NPM packages,
          but negligible or even slower if you only have a handful.
      build-cache-version:
        type: string
        default: '0'
        description: >
          Change this to any other value to alter the cache key, effectively invalidating the latest cache. This is an
          alternative to clearing the cache manually, see
          https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#managing-caches.
      timeout-minutes:
        type: number
        default: 360
        description: Configuration for the timeout-minutes parameter of the workflow. The 360 is GitHub's default.
      verify-dotnet-consolidation:
        type: boolean
        default: true
        description: >
          When set to true, it will be verified whether the NuGet packages of the .NET solution are consolidated, i.e.
          the same version of a given package is used in all projects.

jobs:
  # While the below steps seem suitable to DRY with build-and-test-orchard-core, since reusable workflows can't call
  # other workflows, they'd need to be encapsulated in a composite action. That, however, will result in a single step
  # being shown under the build details with all below steps mushed together.
  build:
    runs-on: ${{ matrix.machine-type }}
    name: Build
    strategy:
      matrix:
        machine-type: ${{ fromJson(inputs.machine-types) }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Deprecation Warning
        shell: pwsh
        run: |
          Write-Output '::warning::This workflow is deprecated. Use build-and-test-dotnet instead, that can also execute tests.'

      - name: Checkout
        uses: Lombiq/GitHub-Actions/.github/actions/checkout@dev
        with:
          token: ${{ secrets.CHECKOUT_TOKEN }}

      - name: Set up .NET
        uses: Lombiq/GitHub-Actions/.github/actions/setup-dotnet@dev
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Verify that .NET packages are consolidated
        if: ${{ inputs.verify-dotnet-consolidation }}
        uses: Lombiq/GitHub-Actions/.github/actions/verify-dotnet-consolidation@dev
        with:
          directory: ${{ inputs.build-directory }}

      - name: Build and Static Code Analysis
        uses: Lombiq/GitHub-Actions/.github/actions/build-dotnet@issue/OSOE-580
        with:
          directory: ${{ inputs.build-directory}}
          verbosity: ${{ inputs.build-verbosity}}
          enable-code-analysis: ${{ inputs.build-enable-code-analysis}}
          enable-nuget-caching: ${{ inputs.build-enable-nuget-caching }}
          enable-npm-caching: ${{ inputs.build-enable-npm-caching }}
          cache-version: ${{ inputs.build-cache-version }}

      - name: Cancel Workflow on Failure
        if: failure() && inputs.cancel-workflow-on-failure == 'true'
        uses: Lombiq/GitHub-Actions/.github/actions/cancel-workflow@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
