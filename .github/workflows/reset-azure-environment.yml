name: Reset Azure Environment

concurrency:
  group: ${{ inputs.app-name }}AzureWorkflow

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    secrets:
      # These secrets are for OpenID Connect-based authentication with Azure services through the azure/login action
      # (proxied by our login-to-azure action below). Check out its documentation on how these secrets are used:
      # https://github.com/azure/login.
      AZURE_APP_SERVICE_RESET_SERVICE_PRINCIPAL_ID:
        required: true
        description: >
          The Application (client) ID of the Azure Service Principal or Managed Credential, which will be mapped to the
          client-id parameter when calling azure/login.
      AZURE_APP_SERVICE_RESET_AZURE_TENANT_ID:
        required: true
        description: >
          The Tenant (Directory) ID of the Microsoft Entra ID tenant, which will be mapped to the tenant-id parameter
          when calling azure/login.
      AZURE_APP_SERVICE_RESET_AZURE_SUBSCRIPTION_ID:
        required: true
        description: >
          The ID of the Azure Subscription the resources are under, which will be mapped to the subscription-id
          parameter when calling azure/login. You can look this up e.g. in the Azure Portal under any resource or the
          subscription itself.

      MAINTENANCE_USER_NAME:
      MAINTENANCE_PASSWORD:

    inputs:
      cancel-workflow-on-failure:
        description: When set to "true", it will cancel the current workflow run with all jobs if this workflow fails.
        type: string
        default: 'false'
      machine-type:
        type: string
        default: ubuntu-22.04
        description: The name of the type of machine to run the workflow under.
      timeout-minutes:
        type: number
        default: 360
        description: Configuration for the timeout-minutes parameter of the workflow. The 360 is GitHub's default.
      app-name:
        required: true
        type: string
        description: What you see at the top of the blade on the Azure Portal. Can contain uppercase letters too.
      destination-slot-name:
        type: string
        default: Staging
        description: >
          The slot name of the web app you want to reset. What you see at the top of the blade on the Azure Portal, when
          you open the slot, before the app name in parenthesis.
      source-slot-name:
        type: string
        default: Production
        description: >
          The slot name of the web app you want to reset the destination web app with. What you see at the top of the
          blade on the Azure Portal, when you open the slot, before the app name in parenthesis.
      resource-group-name:
        required: true
        type: string
        description: Name of the resource group.
      database-connection-string-name:
        type: string
        default: 'OrchardCore__ConnectionString'
        description: >
          The name of the root SQL Server database connection string configured as application settings in Azure, under both
          the production and staging slots with slot-specific values. This is typically "OrchardCore__ConnectionString",
          and points to the database containing Orchard shell settings, which may also contain the Default tenant's or
          all tenants' databases. This connection string may use a contained user of the given database.
      master-database-connection-string-name:
        type: string
        default: 'OrchardCore__ConnectionString-master'
        description: >
          The name of the SQL Server database connection string for the master database, configured as application
          settings in Azure, under both the production and staging slots with slot-specific values. This is typically
          "OrchardCore__ConnectionString-master", and points to the SQL Server master database corresponding to the
          database that the database-connection-string-name parameter points to. This elevated access is necessary to
          recreate the staging database and scale it up if necessary.
      storage-connection-string-name:
        type: string
        default: 'OrchardCore__OrchardCore_Media_Azure__ConnectionString'
        description: >
          The name of the Azure storage account's blob storage connection string, configured as application settings in
          Azure, under both the production and staging slots with slot-specific values. This is typically
          "OrchardCore__OrchardCore_Media_Azure__ConnectionString".
      service-objective-name:
        type: string
        default: S0
        description: The name of the service objective to scale the database to, e.g. B, S1, S4, P4, P6.
      blob-container-include-list:
        type: string
        default: '@("media", "dataprotection")'
        description: >
          PowerShell string array with the name of the included Blob Container(s), e.g. '@("media")' or '@("media",
          "dataprotection)'. The parameter must be a PowerShell string array.
      storage-sas-lifetime-minutes:
        type: number
        default: 5
        description: >
          The number of minutes defining how long the generated Shared Access Signatures
          (https://learn.microsoft.com/en-us/azure/storage/common/storage-sas-overview) used for Blob Storage operations
          are valid for. Default value is 5.
      application-insights-resource-id:
        type: string
        description: >
          ID of the Application Insights resource that the release annotation for the reset should be added to.
          This can e.g. be looked up on the Azure Portal under the given AI resource's Overview page -> JSON View.
      maintenance-host-name:
        type: string
        description: >
          The hostname of the Orchard 1-based application that runs a maintenance based on the Multi Tenancy feature
          (https://github.com/Lombiq/Hosting-Multi-Tenancy#writing-maintenance-providers).
      maintenance-batch-size:
        type: string
        default: '0'
        description: The batch size of the maintenance.

jobs:
  reset-azure-environment:
    runs-on: ${{ inputs.machine-type }}
    name: Reset Azure Environment
    environment: ${{ inputs.destination-slot-name }}
    defaults:
      run:
        shell: pwsh
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Login to Azure
        uses: Lombiq/GitHub-Actions/.github/actions/login-to-azure@dev
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_APP_SERVICE_RESET_SERVICE_PRINCIPAL_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_APP_SERVICE_RESET_AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_APP_SERVICE_RESET_AZURE_SUBSCRIPTION_ID }}

      - name: Initialize PowerShell modules
        uses: Lombiq/Infrastructure-Scripts/.github/actions/initialize@dev

      - name: Stop Web App Slot
        run: |
          Stop-AzureWebAppSlot `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -SlotName ${{ inputs.destination-slot-name }}

      - name: Replace Media
        run: |
          $parameters = @{
            ResourceGroupName = '${{ inputs.resource-group-name }}'
            WebAppName = '${{ inputs.app-name }}'
            SourceSlotName = '${{ inputs.source-slot-name }}'
            DestinationSlotName = '${{ inputs.destination-slot-name }}'
            ConnectionStringName = '${{ inputs.storage-connection-string-name }}'
            ContainerIncludeList = ${{ inputs.blob-container-include-list }}
            SasLifetimeMinutes = ${{ inputs.storage-sas-lifetime-minutes }}
          }
          Invoke-AzureWebAppStorageAzCopy @parameters

      - name: Replace Database
        run: |
          Copy-AzureWebAppSqlDatabase `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }}  `
            -SourceSlotName ${{ inputs.source-slot-name }} `
            -DestinationSlotName ${{ inputs.destination-slot-name }} `
            -ConnectionStringName ${{ inputs.database-connection-string-name }} `
            -Force

      - name: Add Destination Contained User to Destination Database
        run: |
          Add-AzureWebAppSqlDatabaseContainedUser `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -DatabaseSlotName ${{ inputs.destination-slot-name }} `
            -DatabaseConnectionStringName ${{ inputs.master-database-connection-string-name }} `
            -UserConnectionStringName ${{ inputs.database-connection-string-name }}

      - name: Remove Source Contained User from Destination Database
        run: |
          Remove-AzureWebAppSqlDatabaseContainedUser `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -DatabaseSlotName ${{ inputs.destination-slot-name }} `
            -UserSlotName ${{ inputs.source-slot-name }} `
            -DatabaseConnectionStringName ${{ inputs.master-database-connection-string-name }} `
            -UserConnectionStringName ${{ inputs.database-connection-string-name }}

      - name: Add Azure Application Insights Release Annotation
        if: ${{ inputs.application-insights-resource-id != '' }}
        uses: Lombiq/GitHub-Actions/.github/actions/add-azure-application-insights-release-annotation@dev
        with:
          release-name: 'Reset #${{ github.run_number }} from ${{ inputs.source-slot-name }} to ${{ inputs.destination-slot-name }}'
          application-insights-resource-id: ${{ inputs.application-insights-resource-id }}

      - name: Start Web App Slot
        run: |
          Start-AzureWebAppSlot `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -SlotName ${{ inputs.destination-slot-name }}

      - name: Test Web App Slot
        run: |
          Test-AzureWebApp `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -SlotName ${{ inputs.destination-slot-name }}

      - name: Start AfterReplace Maintenance on the Destination Slot
        if: inputs.maintenance-host-name != ''
        run: |
          $maintenanceParameters = @{
            HostName = '${{ inputs.maintenance-host-name }}'
            UserName = '${{ secrets.MAINTENANCE_USER_NAME }}'
            Password = '${{ secrets.MAINTENANCE_PASSWORD }}'
            BatchSize = '${{ inputs.maintenance-batch-size }}'
            MaintenanceName = '${{ inputs.destination-slot-name }}AfterReplace'
          }
          Start-Maintenance @maintenanceParameters

      - name: Scale Database
        run: |
          Set-AzureWebAppSqlDatabaseServiceObjective `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -SlotName ${{ inputs.destination-slot-name }} `
            -ConnectionStringName ${{ inputs.master-database-connection-string-name }} `
            -ServiceObjectiveName ${{ inputs.service-objective-name }}

      - name: Cancel Workflow on Failure
        if: failure() && inputs.cancel-workflow-on-failure == 'true'
        uses: Lombiq/GitHub-Actions/.github/actions/cancel-workflow@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
