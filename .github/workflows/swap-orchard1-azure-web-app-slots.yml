name: Swap Azure Web App Slots

concurrency:
  group: ${{ inputs.app-name }}AzureWorkflow

permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    secrets:
      # These secrets are for OpenID Connect-based authentication with Azure services through the azure/login action
      # (proxied by our login-to-azure action below). Check out its documentation on how these secrets are used:
      # https://github.com/azure/login.
      AZURE_APP_SERVICE_SWAP_SERVICE_PRINCIPAL_ID:
        required: true
        description: >
          The Application (client) ID of the Azure Service Principal or Managed Credential, which will be mapped to the
          client-id parameter when calling azure/login.
      AZURE_APP_SERVICE_SWAP_AZURE_TENANT_ID:
        required: true
        description: >
          The Tenant (Directory) ID of the Microsoft Entra ID tenant, which will be mapped to the tenant-id parameter
          when calling azure/login.
      AZURE_APP_SERVICE_SWAP_AZURE_SUBSCRIPTION_ID:
        required: true
        description: >
          The ID of the Azure Subscription the resources are under, which will be mapped to the subscription-id
          parameter when calling azure/login. You can look this up e.g. in the Azure Portal under any resource or the
          subscription itself.

      MAINTENANCE_USER_NAME:
      MAINTENANCE_PASSWORD:

    inputs:
      cancel-workflow-on-failure:
        description: When set to "true", it will cancel the current workflow run with all jobs if this workflow fails.
        type: string
        default: 'false'
      machine-type:
        type: string
        default: ubuntu-22.04
        description: The name of the type of machine to run the workflow under.
      timeout-minutes:
        type: number
        default: 360
        description: Configuration for the timeout-minutes parameter of the workflow. The 360 is GitHub's default.
      app-name:
        required: true
        type: string
        description: What you see at the top of the blade on the Azure Portal. Can contain uppercase letters too.
      source-slot-name:
        type: string
        default: Staging
        description: >
          The slot name of the web app you want to swap the destination slot (of the same web app) with. What you see at
          the top of the blade on the Azure Portal, when you open the slot, before the app name in parenthesis.
      destination-slot-name:
        type: string
        default: Production
        description: >
          The slot name of the web app you want to swap with the source slot (of the same web app). What you see at the
          top of the blade on the Azure Portal, when you open the slot, before the app name in parenthesis.
      resource-group-name:
        required: true
        type: string
        description: Name of the resource group.
      application-insights-resource-id:
        type: string
        description: >
          ID of the Application Insights resource that the release annotation for the swap should be added to.
          This can e.g. be looked up on the Azure Portal under the given AI resource's Overview page -> JSON View.
      maintenance-host-name:
        type: string
        description: >
          The hostname of the Orchard 1-based application that runs a maintenance based on the Multi Tenancy feature
          (https://github.com/Lombiq/Hosting-Multi-Tenancy#writing-maintenance-providers).
      maintenance-batch-size:
        type: string
        default: '0'
        description: The batch size of the maintenance.

jobs:
  swap-azure-web-app-slots:
    runs-on: ${{ inputs.machine-type }}
    name: Swap Azure Web App Slots
    environment: ${{ inputs.destination-slot-name }}
    defaults:
      run:
        shell: pwsh
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Login to Azure
        uses: Lombiq/GitHub-Actions/.github/actions/login-to-azure@dev
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_APP_SERVICE_SWAP_SERVICE_PRINCIPAL_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_APP_SERVICE_SWAP_AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_APP_SERVICE_SWAP_AZURE_SUBSCRIPTION_ID }}

      - name: Initialize PowerShell modules
        uses: Lombiq/Infrastructure-Scripts/.github/actions/initialize@dev

      - name: Swap Web App Slots
        run: |
          Switch-AzureWebAppSlots `
            -ResourceGroupName ${{ inputs.resource-group-name }} `
            -WebAppName ${{ inputs.app-name }} `
            -SourceSlotName ${{ inputs.source-slot-name }} `
            -DestinationSlotName ${{ inputs.destination-slot-name }}

      - name: Add Azure Application Insights Release Annotation
        if: ${{ inputs.application-insights-resource-id != '' }}
        uses: Lombiq/GitHub-Actions/.github/actions/add-azure-application-insights-release-annotation@dev
        with:
          release-name: 'Swap #${{ github.run_number }} from ${{ inputs.source-slot-name }} to ${{ inputs.destination-slot-name }}'
          application-insights-resource-id: ${{ inputs.application-insights-resource-id }}

      - name: Start AfterSwap Maintenance on the Destination Slot
        if: inputs.maintenance-host-name != ''
        run: |
          $maintenanceParameters = @{
            HostName = '${{ inputs.maintenance-host-name }}'
            UserName = '${{ secrets.MAINTENANCE_USER_NAME }}'
            Password = '${{ secrets.MAINTENANCE_PASSWORD }}'
            BatchSize = '${{ inputs.maintenance-batch-size }}'
            MaintenanceName = '${{ inputs.destination-slot-name }}AfterSwap'
          }
          Start-Maintenance @maintenanceParameters

      - name: Cancel Workflow on Failure
        if: failure() && inputs.cancel-workflow-on-failure == 'true'
        uses: Lombiq/GitHub-Actions/.github/actions/cancel-workflow@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
