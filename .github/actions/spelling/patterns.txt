# URL formats. Match until the first whitespace character. Intentionally do not validate URLs to keep patterns simple.
https?:\/\/\S+
www.\S+

# GUIDs with or without hyphens.
\b[0-9a-fA-F]{8}-?(([0-9a-fA-F]{4}-?){3})[0-9a-fA-F]{12}\b

# SHA checksums.
sha[0-9]{3}-[0-9a-zA-Z+/]{64}

# Orchard Core content item IDs.
\b[0-9a-z]{26}\b

# Git commit hashes.
\b[0-9a-f]{40}\b

# Hex color codes.
(?:#[0-9a-fA-F]{3,6})\b

# Hexadecimal literals in C# code.
\b0x[0-9a-fA-F]+\b

# Match the "I" from the beginning of interface names and the "T" from the beginning of generic type parameter names.
# The pattern matches if the first letter is "I" or "T", followed by a capital letter, followed by a lower-case word
# character, followed by zero or more word characters. Capturing only the first letter while using a positive lookahead
# (?=) for the remainder allows the latter to still be spell-checked, as it is usually made up of one or more actual
# words.
\b(I|T)(?=[A-Z][a-z0-9_]\w*)

# Ignore lines that contain the "#spell-check-ignore-line" marker text.
.*#spell-check-ignore-line.*

# Ignore namespaces in usings as they can contain any random branding.
^using( static)? [^ ]+$
