# This file needs to be present in this exact folder for the workflow using this action to be able to work with submodules.
name: Spelling
description: Checks for spelling errors in files.

# When updating defaults here also update them in the `spelling` workflow.
inputs:
  merge-file-excludes:
    description: >
      When set to "true", the "excludes.txt" file's contents in Lombiq.GitHub.Actions will be merged into the one in the
      workspace repository.
    required: false
    default: 'true'
  merge-forbidden-patterns:
    description: >
      When set to "true", the "line_forbidden.patterns" file's contents in Lombiq.GitHub.Actions will be merged into the
      one in the workspace repository.
    required: false
    default: 'true'
  merge-ignore-patterns:
    description: >
      When set to "true", the "patterns.txt" file's contents in Lombiq.GitHub.Actions will be merged into the one in the
      workspace repository.
    required: false
    default: 'true'
  default-dictionaries:
    description: Space delimited list of URLs (or `prefix:`+path) to additional word lists
    required: false
    default: |
      cspell:filetypes/filetypes.txt
      cspell:software-terms/dict/softwareTerms.txt
      lombiq-lgha:dictionaries/Lombiq.common.txt
  additional-configuration-source-prefixes:
    description: >
      JSON map of prefixes for configuration file (for now, only dictionary) URLs.
    required: false
  additional-dictionaries:
    description: Space delimited list of URLs (or `prefix:`+path) to additional word lists
    required: false
  configuration-path:
    description: Relative path to the spell-checking configuration folder.
    required: false
    default: .github/actions/spelling
  default-configuration-repository:
    description: >
      Repository with default configuration to use when the workspace repository doesn't have its own configuration. The
      default from Check Spelling is ''.
    required: false
    default: Lombiq/GitHub-Actions@dev
  post-comment:
    description: Flag for if check-spelling should post comment, the default is 1.
    required: false
    default: '1'
  task:
    description: Follow up task for check-spelling, the default is ''.
    required: false
    default: ''
outputs:
  followup:
    description: Check Spelling output for followup.
    value: ${{ steps.step-check-spelling.outputs.followup }}

runs:
  using: composite
  steps:
    - name: Setup Scripts
      shell: pwsh
      run: |
        "${{ github.action_path }}" >> $Env:GITHUB_PATH
        (Resolve-Path "${{ github.action_path }}/../../../Scripts").Path >> $Env:GITHUB_PATH

    # If the configuration path doesn't exist in the workspace, then it means that the workspace repository doesn't have
    # its own spell-checking configuration. In that case we don't need to copy anything, because the configuration files
    # will be used implicitly according to the value of default-configuration-repository.
    - name: Check configuration path
      id: check-configuration-path
      shell: pwsh
      run: |
        Set-GitHubOutput -Key 'configuration-path-exists' -Value (Test-Path (Join-Path "$Env:GITHUB_WORKSPACE" '${{ inputs.configuration-path }}'))

    - name: Copy spell-checking advice
      if: steps.check-configuration-path.outputs.configuration-path-exists == 'true'
      shell: pwsh
      run: |
        $targetPath = Join-Path "$Env:GITHUB_WORKSPACE" '${{ inputs.configuration-path }}' 'advice.md'

        if (-not (Test-Path $targetPath))
        {
          Copy-Item (Join-Path '${{ github.action_path }}' 'advice.md') $targetPath
        }

    - name: Merge "excludes.txt"
      if: inputs.merge-file-excludes == 'true' && steps.check-configuration-path.outputs.configuration-path-exists == 'true'
      shell: pwsh
      run: |
        $mergeParameters = @{
          Source = Join-Path '${{ github.action_path }}' 'excludes.txt'
          Target = Join-Path "$Env:GITHUB_WORKSPACE" '${{ inputs.configuration-path }}' 'excludes.txt'
        }

        Merge-SpellCheckingDictionaryFile @mergeParameters

    - name: Merge "line_forbidden.patterns"
      if: inputs.merge-forbidden-patterns == 'true' && steps.check-configuration-path.outputs.configuration-path-exists == 'true'
      shell: pwsh
      run: |
        $mergeParameters = @{
          Source = Join-Path '${{ github.action_path }}' 'line_forbidden.patterns'
          Target = Join-Path "$Env:GITHUB_WORKSPACE" '${{ inputs.configuration-path }}' 'line_forbidden.patterns'
        }

        Merge-SpellCheckingDictionaryFile @mergeParameters

    - name: Merge "patterns.txt"
      if: inputs.merge-ignore-patterns == 'true' && steps.check-configuration-path.outputs.configuration-path-exists == 'true'
      shell: pwsh
      run: |
        $mergeParameters = @{
          Source = Join-Path '${{ github.action_path }}' 'patterns.txt'
          Target = Join-Path "$Env:GITHUB_WORKSPACE" '${{ inputs.configuration-path }}' 'patterns.txt'
        }

        Merge-SpellCheckingDictionaryFile @mergeParameters

    # The branch name in the 'lombiq-lgha' prefix needs to be wired in to 'dev' (since that's the default branch of this
    # repository) and updated manually when working in a different branch, because the referenced branch name (when
    # called from a workflow) of this action is not exposed by GitHub, only the branch name of the workflow that
    # triggered the run, see https://docs.github.com/en/actions/learn-github-actions/contexts.
    - name: Merge configuration source prefixes
      id: merge-configuration-source-prefixes
      shell: pwsh
      run: |
        $defaultPrefixes = @{
          'lombiq-lgha' = 'https://raw.githubusercontent.com/Lombiq/GitHub-Actions/dev/.github/actions/spelling/'
          'cspell' = 'https://raw.githubusercontent.com/check-spelling/cspell-dicts/v20230509/dictionaries/'
        }

        $additionalPrefixesInput = '${{ inputs.additional-configuration-source-prefixes }}'
        $additionalPrefixes = [string]::IsNullOrWhiteSpace($additionalPrefixesInput) ? @{} : (ConvertFrom-Json $additionalPrefixesInput -AsHashtable)

        $defaultPrefixes.Keys |
          Where-Object { -not $additionalPrefixes.ContainsKey($PSItem) } |
          ForEach-Object { $additionalPrefixes[$PSItem] = $defaultPrefixes[$PSItem] }

        Set-GitHubOutput -Key 'merged-prefixes' -Value (ConvertTo-Json $additionalPrefixes -Compress)

    - name: Merge dictionary lists
      id: merge-dictionary-lists
      shell: pwsh
      run: |
        $defaultDictionaries = ConvertFrom-MultiLineStringToStringArray -Lines '${{ inputs.default-dictionaries }}'
        $additionalDictionaries = ConvertFrom-MultiLineStringToStringArray -Lines '${{ inputs.additional-dictionaries }}'

        Set-GitHubOutput -Key 'merged-dictionary-list' -Value `
            ((@($additionalDictionaries) + @($defaultDictionaries) | `
            Select-Object -Unique) -join ' ')

    - name: Check Spelling
      id: step-check-spelling
      # When updating the check-spelling action to a new release, update the 'cspell' prefix in the "Merge configuration
      # source prefixes" step with the dictionary version tag that belongs to the commit of the release. See
      # https://github.com/check-spelling/check-spelling/blob/v0.0.22/action.yml#L67 for current version.
      # Also update check_extra_dictionaries below as necessary.
      uses: Lombiq/check-spelling@dev-lombiq # Post-v0.0.22 with actions/cache update.
      with:
        check_file_names: 1
        config: ${{ inputs.configuration-path }}
        dictionary_source_prefixes: ${{ steps.merge-configuration-source-prefixes.outputs.merged-prefixes }}
        experimental_apply_changes_via_bot: 0
        extra_dictionaries: ${{ steps.merge-dictionary-lists.outputs.merged-dictionary-list }}
        post_comment: ${{ inputs.post-comment }}
        spell_check_this: ${{ inputs.default-configuration-repository }}
        suppress_push_for_open_pull_request: 1
        task: ${{ inputs.task }}
        # While extra_dictionaries adds dictionaries that'll be used for spell-checking, the dictionaries under
        # check_extra_dictionaries will only be used to provide hints for unrecognized words. You'll see this under the
        # check-spelling report (PR comment and workflow run summary) along the lines of "Available dictionaries could
        # cover words not in the dictionary". The values here are some of the default dictionaries that we think can
        # most possibly be useful and ours. The default dictionaries are under
        # https://github.com/check-spelling/cspell-dicts/tree/main/dictionaries. When updating the check-spelling action
        # to a new release, consider updating this list too with new entries from
        # https://github.com/check-spelling/check-spelling/blob/main/action.yml.
        check_extra_dictionaries: |
          cspell:aws/aws.txt
          cspell:companies/src/companies.txt
          cspell:cryptocurrencies/cryptocurrencies.txt
          cspell:csharp/csharp.txt
          cspell:css/dict/css.txt
          cspell:docker/src/docker-words.txt
          cspell:dotnet/dict/dotnet.txt
          cspell:filetypes/filetypes.txt
          cspell:fonts/fonts.txt
          cspell:fullstack/dict/fullstack.txt
          cspell:html-symbol-entities/entities.txt
          cspell:html/dict/html.txt
          cspell:html/src/svg.txt
          cspell:lorem-ipsum/dictionary.txt
          cspell:node/additional_words.txt
          cspell:node/dict/node.txt
          cspell:npm/dict/npm.txt
          cspell:powershell/dict/powershell.txt
          cspell:public-licenses/src/additional-licenses.txt
          cspell:public-licenses/src/generated/public-licenses.txt
          cspell:software-terms/dict/networkingTerms.txt
          cspell:software-terms/dict/softwareTerms.txt
          cspell:software-terms/dict/webServices.txt
          cspell:sql/src/sql.txt
          cspell:sql/src/tsql.txt
          cspell:typescript/dict/typescript.txt
          lombiq-lgha:dictionaries/Liquid.txt
          lombiq-lgha:dictionaries/Lombiq.common.txt
          lombiq-lgha:dictionaries/Lombiq.people.txt
          lombiq-lgha:dictionaries/Security.txt
