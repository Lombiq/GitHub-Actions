name: Verify that .NET packages are consolidated
description: >
  Verifies that the NuGet packages of a .NET solution are consolidated, i.e. the same version of a given package is used
  in all projects.

inputs:
  directory:
    required: false
    default: .
    description: Path to the directory where a solution file can be found.
  solution-path:
    required: false
    default: '*.sln'
    description: >
      The path of the solution file to be processed. The value is given to PowerShell's `Get-Item` cmdlet as-is, so
      grepping is still possible but a name with spaces must be escaped separately.
  exclude-version-regex:
    required: false
    default: \-alpha
    description: >
      A regular expression to match package versions that will be skipped during NuGet package consolidation. See the
      dotnet consolidate docs for details: https://github.com/olsh/dotnet-consolidate?tab=readme-ov-file#usage.
  exclude-project-path:
    required: false
    default: src/*.Web/*.csproj
    description: >
      A path expression referring to the projects that should be temporarily removed from the solution before NuGet
      package consolidation. These are restored after the fact by resetting the git repository. The expression is passed
      to the Get-Item cmdlet as-is, so you can use wildcard characters and even specify multiple paths by separating
      them with a comma.

runs:
  using: composite
  steps:
    - name: Setup Scripts
      shell: pwsh
      run: |
        "${{ github.action_path }}" >> $Env:GITHUB_PATH
        (Resolve-Path "${{ github.action_path }}/../../../Scripts").Path >> $Env:GITHUB_PATH

    - name: Install dotnet-consolidate
      uses: Lombiq/GitHub-Actions/.github/actions/install-dotnet-tool@dev
      with:
        name: dotnet-consolidate
        version: 4.2.0

    - name: Verify consolidation status
      shell: pwsh
      working-directory: ${{ inputs.directory }}
      env:
        ExcludeVersionRegex: ${{ inputs.exclude-version-regex }}
      run: |
        $solutionPath = (Get-Item '${{ inputs.solution-path }}').FullName;
        $excludedProjects = (Get-Item ${{ inputs.exclude-project-path }} -ErrorAction Ignore).FullName

        Test-DotnetPackageConsolidation -SolutionPath $solutionPath -ExcludedProjects $excludedProjects
