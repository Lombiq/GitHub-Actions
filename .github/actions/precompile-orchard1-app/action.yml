name: Precompile Orchard 1 application
description: Publishes an Orchard 1 application using the Precompiled build target through Orchard.proj.

inputs:
  repository:
    required: false
    default: ''
    description: >
      The GitHub path of the repository, e.g., 'Lombiq/Open-Source-Orchard-Extensions'. When provided, the repository
      will be checked out.
  token:
    required: false
    default: ${{ github.token }}
    description: >
      The GitHub token to authenticate checkout. Pass in a GitHub personal access token if authenticated submodules are
      used.
  checkout-path:
    required: false
    default: .
    description: The optional checkout path for the repository, relative to the workspace.
  checkout-ref:
    required: false
    default: ''
    description: The branch, tag or commit SHA to checkout.
  verbosity:
    required: false
    default: quiet
    description: Verbosity parameter for msbuild.
  treat-warnings-as-errors:
    required: false
    default: 'true'
    description: If set to "true", warnings produced during the build will be treated as errors and fail the build.
  enable-code-analysis:
    required: false
    default: 'true'
    description: If set to "true", static code analysis is enabled during the build.
  publish-version:
    required: false
    default: 1.${{ github.run_number }}.${{ github.run_attempt }}-${{ github.run_id }}
    description: The value given to `msbuild`'s `-Version` switch.
  msbuild-switches:
    required: false
    default: ''
    description: >
      Additional command line switches to be passed to `msbuild`. You must split these into multiple lines, even the
      parameter value.
  solution-path:
    required: true
    description: The path to the solution file, relative to Orchard.proj.

runs:
  using: composite
  steps:
    - name: Clone repository
      if: inputs.repository != ''
      # Using the official checkout action directly, because our wrapper action doesn't have most of the parameters we
      # need here. We only need those parameters for this action though.
      uses: Lombiq/GitHub-Actions/.github/actions/checkout@issue/LMBQ-178
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.checkout-ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.checkout-path }}

    - name: Enable Node corepack
      uses: Lombiq/GitHub-Actions/.github/actions/enable-corepack@issue/LMBQ-178

    # Calling nuget restore separately on the actual solution, because we're passing Orchard.proj to the msbuild action
    # instead to be able to call the Precompiled target on it.
    - name: Restore NuGet packages
      shell: pwsh
      run: nuget restore ${{ inputs.checkout-path }}/${{ inputs.solution-path }}

    - name: Publish Precompiled app
      uses: Lombiq/GitHub-Actions/.github/actions/msbuild@issue/LMBQ-178
      with:
        directory: ${{ inputs.checkout-path }}
        verbosity: ${{ inputs.verbosity }}
        treat-warnings-as-errors: ${{ inputs.treat-warnings-as-errors }}
        enable-code-analysis: ${{ inputs.enable-code-analysis }}
        publish-version: ${{ inputs.publish-version }}
        solution-or-project-path: Orchard.proj
        msbuild-switches: |
          /t:Precompiled
          /p:Solution=${{ inputs.solution-path }}
          ${{ inputs.msbuild-switches }}
