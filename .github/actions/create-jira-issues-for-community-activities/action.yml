name: Create Jira issues for community activities
description: >
  Creates Jira issues for community activities happening on GitHub, like issues, discussions, and pull requests being
  opened. Pull requests are only taken into account if they're not already related to a Jira issue (by starting their
  title with a Jira issue key).

inputs:
  issue-component:
    required: false
    description: Optional component of the issues being created.
  suffix-issue-titles:
    required: false
    default: true'
    description: >
      If set to "true", Jira issue titles will be suffixed with "in <issue-component>" if the issue-component parameter
      is specified, or the repository name. If set to "false", no suffix will be added to Jira issue titles.

runs:
  using: composite
  steps:
    - name: Setup Scripts
      shell: pwsh
      run: |
        "${{ github.action_path }}" >> $Env:GITHUB_PATH
        (Resolve-Path "${{ github.action_path }}/../../../Scripts").Path >> $Env:GITHUB_PATH

    # Don't do anything for pull requests that are already related to an issue, i.e. their titles start with an issue
    # key.
    - name: Check for Jira Issue-Related Pull Request
      id: issue-related-pr
      env:
        # Even though the trigger is pull_request_target, the event payload is pull_request (see
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_target).
        PR_TITLE: ${{ github.event.pull_request.title }}
      shell: pwsh
      run: |
        $output = "False"

        if ("${{ github.event.pull_request }}" -ne "")
        {
            $output = (Confirm-PullRequestTitle "$Env:PR_TITLE") -or $Env:GITHUB_HEAD_REF -Like "*issue*"
        }

        Set-GitHubOutput "is-issue-pr" $output

    - name: Create Jira Issue
      if: steps.issue-related-pr.outputs.is-issue-pr == 'False'
      id: create-issue
      env:
        # Necessary to pass this via an environment variable, because when assigned directly to a variable in the
        # script, it can cause escaping issues with backtick characters (like a "`ulong..." causing "The Unicode escape
        # sequence is not valid."). Also, the github context contains user input and thus shouldn't be used inline in
        # scripts to prevent script injection.
        GITHUB_JSON: ${{ toJSON(github) }}
      shell: pwsh
      run: |
        $github = $Env:GITHUB_JSON | ConvertFrom-Json

        $templates = Initialize-IssueTemplates

        $params = @{
            GitHub = $github
            IssueComponent = '${{ inputs.issue-component }}'
            SuffixIssueTitles = [System.Convert]::ToBoolean('${{ inputs.suffix-issue-titles }}')
            DiscussionJiraIssueDescription = $templates['DISCUSSION_JIRA_ISSUE_DESCRIPTION']
            IssueJiraIssueDescription = $templates['ISSUE_JIRA_ISSUE_DESCRIPTION']
            PullRequestJiraIssueDescription = $templates['PULL_REQUEST_JIRA_ISSUE_DESCRIPTION']
        }

        $issueDetails = Initialize-IssueDetails @params

        $params = @{
            Summary = $issueDetails.Summary
            Description = $issueDetails.Description
            Type = $issueDetails.Type
            IssueComponent = '${{ inputs.issue-component }}'
            LinkUrl = $issueDetails.LinkUrl
            LinkTitle = $issueDetails.LinkTitle
        }

        New-JiraIssue @params

    - name: Update GitHub Issue
      if: steps.issue-related-pr.outputs.is-issue-pr == 'False' && github.event.issue
      # v3.6.0
      uses: actions-cool/issues-helper@a610082f8ac0cf03e357eb8dd0d5e2ba075e017e
      with:
        actions: update-issue
        token: ${{ env.GITHUB_TOKEN }}
        issue-number: ${{ github.event.issue.number }}
        title: ${{ github.event.issue.title }} (${{ steps.create-issue.outputs.issue-key }})
        body: ${{ github.event.issue.body }}\n\n[Jira issue](${{ steps.create-issue.outputs.issue-url }})
        update-mode: replace
